# Generated by Django 4.1.2 on 2022-11-15 08:21

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import pitapat.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Chat',
            fields=[
                ('key', models.BigAutoField(db_column='chat_key', primary_key=True, serialize=False)),
                ('valid', models.CharField(max_length=1)),
                ('content', models.TextField()),
                ('reg_dt', models.DateTimeField()),
                ('upd_dt', models.DateTimeField()),
            ],
            options={
                'db_table': 'E_Chat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('key', models.BigAutoField(db_column='user_key', primary_key=True, serialize=False)),
                ('username', models.CharField(db_column='user_name', max_length=30, unique=True)),
                ('email', models.CharField(max_length=50, unique=True)),
                ('phone', models.CharField(max_length=20, unique=True)),
                ('status', models.CharField(max_length=1)),
                ('gender', models.CharField(max_length=1)),
                ('interested_gender', models.CharField(max_length=1)),
                ('birthday', models.DateTimeField()),
                ('reg_dt', models.DateTimeField(auto_now_add=True)),
                ('reg_id', models.CharField(max_length=50)),
                ('upd_dt', models.DateTimeField(auto_now=True)),
                ('upd_id', models.CharField(max_length=50)),
                ('is_staff', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'User',
                'db_table': 'E_User',
            },
            managers=[
                ('objects', pitapat.models.MyUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='College',
            fields=[
                ('key', models.BigAutoField(db_column='college_key', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='college_name', max_length=20)),
                ('reg_dt', models.DateTimeField(auto_now_add=True)),
                ('reg_id', models.CharField(max_length=50)),
                ('upd_dt', models.DateTimeField(auto_now=True)),
                ('upd_id', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'College',
                'db_table': 'E_College',
            },
        ),
        migrations.CreateModel(
            name='Major',
            fields=[
                ('key', models.BigAutoField(db_column='major_key', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='major_name', max_length=20)),
                ('reg_dt', models.DateTimeField(auto_now_add=True)),
                ('reg_id', models.CharField(max_length=50)),
                ('upd_dt', models.DateTimeField(auto_now=True)),
                ('upd_id', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Major',
                'db_table': 'E_Major',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('key', models.BigAutoField(db_column='tag_key', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='tag_name', max_length=20)),
                ('type', models.CharField(db_column='tag_type', max_length=20)),
                ('reg_dt', models.DateTimeField(auto_now_add=True)),
                ('reg_id', models.CharField(max_length=50)),
                ('upd_dt', models.DateTimeField(auto_now=True)),
                ('upd_id', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Tag',
                'db_table': 'E_Tag',
            },
        ),
        migrations.CreateModel(
            name='University',
            fields=[
                ('key', models.BigAutoField(db_column='university_key', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='university_name', max_length=20)),
                ('location', models.CharField(max_length=20)),
                ('email_domain', models.CharField(max_length=20)),
                ('reg_dt', models.DateTimeField(auto_now_add=True)),
                ('reg_id', models.CharField(max_length=50)),
                ('upd_dt', models.DateTimeField(auto_now=True)),
                ('upd_id', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'University',
                'verbose_name_plural': 'Universities',
                'db_table': 'E_University',
            },
        ),
        migrations.CreateModel(
            name='Pitapat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_field', models.ForeignKey(db_column='from', on_delete=django.db.models.deletion.CASCADE, related_name='pitapat_from', to=settings.AUTH_USER_MODEL)),
                ('to', models.ForeignKey(db_column='to', on_delete=django.db.models.deletion.CASCADE, related_name='pitapat_to', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'pitapat',
                'db_table': 'R_Pitapat',
            },
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('key', models.BigAutoField(db_column='photo_key', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='photo_name', max_length=50)),
                ('path', models.CharField(max_length=256)),
                ('reg_dt', models.DateTimeField(auto_now_add=True)),
                ('reg_id', models.CharField(max_length=50)),
                ('upd_dt', models.DateTimeField(auto_now=True)),
                ('upd_id', models.CharField(max_length=50)),
                ('user', models.ForeignKey(db_column='user_key', on_delete=django.db.models.deletion.CASCADE, related_name='photos', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Photo',
                'db_table': 'E_Photo',
            },
        ),
        migrations.CreateModel(
            name='Introduction',
            fields=[
                ('key', models.BigAutoField(db_column='introduction_key', primary_key=True, serialize=False)),
                ('field', models.TextField()),
                ('reg_dt', models.DateTimeField(auto_now_add=True)),
                ('reg_id', models.CharField(max_length=50)),
                ('upd_dt', models.DateTimeField(auto_now=True)),
                ('upd_id', models.CharField(max_length=50)),
                ('user', models.ForeignKey(db_column='user_key', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Introduction',
                'db_table': 'E_Introduction',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='college',
            field=models.ForeignKey(db_column='college_key', on_delete=django.db.models.deletion.DO_NOTHING, to='pitapat.college'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='major',
            field=models.ForeignKey(db_column='major_key', on_delete=django.db.models.deletion.DO_NOTHING, to='pitapat.major'),
        ),
        migrations.AddField(
            model_name='user',
            name='pitapat',
            field=models.ManyToManyField(through='pitapat.Pitapat', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='user',
            name='university',
            field=models.ForeignKey(db_column='university_key', on_delete=django.db.models.deletion.CASCADE, to='pitapat.university'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='UserTag',
            fields=[
                ('user', models.OneToOneField(db_column='user_key', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('tag', models.ForeignKey(db_column='tag_key', on_delete=django.db.models.deletion.CASCADE, to='pitapat.tag')),
            ],
            options={
                'verbose_name': 'User-Tag Relationship',
                'db_table': 'R_UserTag',
                'unique_together': {('user', 'tag')},
            },
        ),
        migrations.CreateModel(
            name='UniversityCollege',
            fields=[
                ('university', models.OneToOneField(db_column='university_key', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='pitapat.university')),
                ('college', models.ForeignKey(db_column='college_key', on_delete=django.db.models.deletion.CASCADE, to='pitapat.college')),
            ],
            options={
                'verbose_name': 'University-College Relationship',
                'db_table': 'R_UniversityCollege',
                'unique_together': {('university', 'college')},
            },
        ),
        migrations.AddField(
            model_name='university',
            name='colleges',
            field=models.ManyToManyField(through='pitapat.UniversityCollege', to='pitapat.college'),
        ),
        migrations.CreateModel(
            name='CollegeMajor',
            fields=[
                ('college', models.OneToOneField(db_column='college_key', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='pitapat.college')),
                ('major', models.ForeignKey(db_column='major_key', on_delete=django.db.models.deletion.CASCADE, to='pitapat.major')),
            ],
            options={
                'verbose_name': 'College-Major Relationship',
                'db_table': 'R_CollegeMajor',
                'unique_together': {('college', 'major')},
            },
        ),
        migrations.AddField(
            model_name='college',
            name='majors',
            field=models.ManyToManyField(through='pitapat.CollegeMajor', to='pitapat.major'),
        ),
        migrations.AddField(
            model_name='user',
            name='tags',
            field=models.ManyToManyField(through='pitapat.UserTag', to='pitapat.tag'),
        ),
    ]
